{
  "test_plan": {
    "name": "Brie IT Agent Regression Test Plan",
    "version": "1.0.0",
    "date": "2025-10-14",
    "description": "Comprehensive regression tests for all fixed issues and core functionality"
  },
  "test_suites": [
    {
      "suite_id": "TS001",
      "name": "Distribution List Approvals",
      "description": "Tests for DL request creation, approval, and auto-close functionality",
      "automation_status": "AUTOMATED",
      "test_script": "run-full-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS001-T001",
          "name": "DL Request - Single Match",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "user_message": "I need to be added to the Sales DL",
          "expected_results": [
            "Lambda processes request successfully",
            "Response status code 200",
            "Interaction type = 'Access Management'"
          ],
          "validation": {
            "lambda_invocation": {
              "event_type": "app_mention",
              "response_code": 200
            }
          }
        },
        {
          "test_id": "TS001-T002",
          "name": "DL Approval - Auto Close",
          "priority": "CRITICAL",
          "automation": "AUTOMATED",
          "action": "Simulate approval button click",
          "expected_results": [
            "Conversation outcome updated to 'Resolved'",
            "awaiting_approval set to false",
            "Test data cleaned up automatically"
          ],
          "validation": {
            "dynamodb_check": {
              "table": "brie-it-helpdesk-bot-interactions",
              "fields": {
                "outcome": "Resolved",
                "awaiting_approval": false
              }
            }
          }
        },
        {
          "test_id": "TS001-T003",
          "name": "DL Request - Multiple Matches",
          "priority": "MEDIUM",
          "automation": "AUTOMATED",
          "user_message": "Add me to the employees dl",
          "expected_results": [
            "Lambda processes request",
            "Response status code 200"
          ]
        }
      ]
    },
    {
      "suite_id": "TS002",
      "name": "SSO Group Requests",
      "description": "Tests for SSO group access requests",
      "automation_status": "AUTOMATED",
      "test_script": "run-full-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS002-T001",
          "name": "SSO Group Request",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "user_message": "I need access to the Finance SSO group",
          "expected_results": [
            "Lambda processes SSO request",
            "Response status code 200",
            "Interaction type = 'Access Management'"
          ],
          "validation": {
            "lambda_invocation": {
              "event_type": "app_mention",
              "response_code": 200
            }
          }
        },
        {
          "test_id": "TS002-T002",
          "name": "SSO Approval - Auto Close",
          "priority": "CRITICAL",
          "automation": "AUTOMATED",
          "action": "Simulate manager approval",
          "expected_results": [
            "Approval processed successfully",
            "Conversation closed properly"
          ]
        }
      ]
    },
    {
      "suite_id": "TS003",
      "name": "Conversation Timeout & Auto-Resolve",
      "description": "Tests for automatic conversation timeout after 24 hours of inactivity",
      "automation_status": "AUTOMATED",
      "test_script": "run-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS003-T001",
          "name": "Auto-resolve after timeout",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "action": "Create conversation and trigger auto-resolve handler",
          "expected_results": [
            "Conversation outcome updated to 'Timed Out - No Response'",
            "Handler executes successfully"
          ],
          "validation": {
            "dynamodb_check": {
              "table": "brie-it-helpdesk-bot-interactions",
              "fields": {
                "outcome": "Timed Out - No Response"
              }
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS004",
      "name": "Conversation Resumption",
      "description": "Tests for detecting and resuming timed-out conversations",
      "automation_status": "AUTOMATED",
      "test_script": "run-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS004-T001",
          "name": "Detect timed-out conversation for resumption",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "action": "Create 6-day-old timed-out conversation and scan",
          "expected_results": [
            "Timed-out conversation detected in scan",
            "Conversation available for resumption"
          ],
          "validation": {
            "dynamodb_scan": {
              "filter": "outcome = 'Timed Out - No Response' AND timestamp < 5 days ago",
              "expected_count": ">=1"
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS005",
      "name": "Dashboard Timestamps",
      "description": "Tests for proper timestamp display in conversation history",
      "automation_status": "AUTOMATED",
      "test_script": "run-full-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS005-T001",
          "name": "Verify timestamp format in DynamoDB",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "action": "Create interaction and validate date field format",
          "expected_results": [
            "Date field in ISO 8601 format (YYYY-MM-DDTHH:MM:SS)",
            "No 'Invalid Date' possible on dashboard"
          ],
          "validation": {
            "dynamodb_check": {
              "table": "brie-it-helpdesk-bot-interactions",
              "field_format": {
                "date": "ISO 8601 string"
              }
            }
          }
        },
        {
          "test_id": "TS005-T002",
          "name": "Bot Response Timestamp",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "expected_results": [
            "Bot message has timestamp (ISO string)",
            "Bot message has timestamp_ms field",
            "Dashboard displays formatted date (not 'Invalid Date')"
          ],
          "validation": {
            "dynamodb_check": {
              "conversation_history_format": {
                "timestamp": "string (ISO)",
                "timestamp_ms": "number",
                "message": "string",
                "from": "bot"
              }
            },
            "dashboard_check": "No 'Invalid Date' displayed"
          }
        }
      ]
    },
    {
      "suite_id": "TS006",
      "name": "Ticket Creation",
      "description": "Tests for creating IT support tickets",
      "automation_status": "AUTOMATED",
      "test_script": "run-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS006-T001",
          "name": "Create ticket with conversation history",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "action": "Create conversation and verify ticket table accessible",
          "expected_results": [
            "Ticket table accessible and queryable",
            "Conversation history included in ticket"
          ],
          "validation": {
            "dynamodb_check": {
              "table": "it-helpdesk-tickets",
              "accessible": true
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS007",
      "name": "Confluence Search",
      "description": "Tests for Confluence wiki content retrieval",
      "automation_status": "AUTOMATED",
      "test_script": "run-full-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS007-T001",
          "name": "Confluence search integration",
          "priority": "MEDIUM",
          "automation": "AUTOMATED",
          "user_message": "how do I reset my password",
          "expected_results": [
            "Lambda executes Confluence search",
            "Response status code 200",
            "Handles 403 gracefully if token expired"
          ],
          "validation": {
            "lambda_invocation": {
              "event_type": "app_mention",
              "response_code": 200
            }
          },
          "known_issue": "Confluence API 403 - token expired (Issue #7)"
        },
        {
          "test_id": "TS007-T002",
          "name": "Confluence Image Upload",
          "priority": "LOW",
          "automation": "MANUAL",
          "user_message": "I am having RTD issues in Excel",
          "expected_results": [
            "Bot searches for relevant images",
            "Bot uploads up to 2 images to Slack",
            "Images are from pages with 'foritchatbot' label"
          ],
          "known_issue": "Confluence API 403 - token expired (Issue #7)"
        }
      ]
    },
    {
      "suite_id": "TS008",
      "name": "Schedule Management",
      "description": "Tests for EventBridge schedule creation and cancellation",
      "automation_status": "AUTOMATED",
      "test_script": "run-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS008-T001",
          "name": "Verify schedule cancellation on conversation close",
          "priority": "MEDIUM",
          "automation": "AUTOMATED",
          "action": "Create conversation and verify schedule management accessible",
          "expected_results": [
            "Schedule management system accessible",
            "Can query schedules via AWS API"
          ],
          "validation": {
            "aws_api_check": {
              "service": "scheduler",
              "operation": "list-schedules"
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS009",
      "name": "Smart Conversation Linking",
      "description": "Tests for AI-powered conversation resumption detection",
      "automation_status": "AUTOMATED",
      "test_script": "run-full-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS009-T001",
          "name": "Detect and offer resumption for timed-out conversation",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "action": "Create timed-out Excel conversation, send similar message",
          "user_message": "Excel is still crashing",
          "previous_conversation": "Excel keeps crashing when I open large files",
          "expected_results": [
            "Lambda scans for timed-out conversations",
            "AI comparison executed (Claude API call)",
            "Resumption offer logic triggered"
          ],
          "validation": {
            "lambda_invocation": {
              "event_type": "app_mention",
              "response_code": 200,
              "ai_comparison": true
            }
          }
        },
        {
          "test_id": "TS009-T002",
          "name": "Do NOT offer resumption for different issue",
          "priority": "HIGH",
          "automation": "AUTOMATED",
          "action": "Create timed-out Excel conversation, send Word message",
          "user_message": "I need help with Word formatting",
          "previous_conversation": "Excel keeps crashing",
          "expected_results": [
            "AI correctly identifies different topic",
            "No false positive resumption offer",
            "New conversation created instead"
          ],
          "validation": {
            "lambda_invocation": {
              "event_type": "app_mention",
              "response_code": 200,
              "no_false_positive": true
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS010",
      "name": "Response Quality Review",
      "description": "Tests for AI response generation and conversation history storage",
      "automation_status": "AUTOMATED",
      "test_script": "run-full-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS010-T001",
          "name": "Verify AI response contains helpful information",
          "priority": "MEDIUM",
          "automation": "AUTOMATED",
          "user_message": "my computer is slow",
          "expected_results": [
            "AI response generated via Bedrock Claude",
            "Response status code 200",
            "No errors in response generation"
          ],
          "validation": {
            "lambda_invocation": {
              "event_type": "app_mention",
              "response_code": 200,
              "bedrock_call": true
            }
          }
        },
        {
          "test_id": "TS010-T002",
          "name": "Verify conversation history stored correctly",
          "priority": "MEDIUM",
          "automation": "AUTOMATED",
          "action": "Query DynamoDB for conversation_history field",
          "expected_results": [
            "Conversation history stored as JSON",
            "Messages persisted for dashboard display"
          ],
          "validation": {
            "dynamodb_check": {
              "table": "brie-it-helpdesk-bot-interactions",
              "field": "conversation_history",
              "format": "JSON string"
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS011",
      "name": "Dashboard Functionality",
      "description": "Tests for Recent Interactions dashboard",
      "automation_status": "MANUAL",
      "tests": [
        {
          "test_id": "TS011-T001",
          "name": "Dashboard Loads",
          "priority": "HIGH",
          "automation": "MANUAL",
          "action": "Open https://dyxb7ssm7p469.cloudfront.net/",
          "expected_results": [
            "Dashboard loads without errors",
            "Recent interactions displayed",
            "All timestamps formatted correctly",
            "No 'Invalid Date' displayed"
          ]
        },
        {
          "test_id": "TS011-T002",
          "name": "Conversation History Display",
          "priority": "HIGH",
          "automation": "MANUAL",
          "action": "Click on an interaction",
          "expected_results": [
            "Conversation history modal opens",
            "All messages displayed with timestamps",
            "User and bot messages clearly labeled",
            "Timestamps in local time format"
          ]
        },
        {
          "test_id": "TS011-T003",
          "name": "Filter by Interaction Type",
          "priority": "MEDIUM",
          "automation": "MANUAL",
          "action": "Filter by 'Access Management'",
          "expected_results": [
            "Only Access Management interactions shown",
            "Count updates correctly"
          ]
        }
      ]
    },
    {
      "suite_id": "TS012",
      "name": "Approval Timeout",
      "description": "Tests for 5-day approval timeout and automatic ticket creation",
      "automation_status": "AUTOMATED",
      "test_script": "run-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS012-T001",
          "name": "5-day approval timeout detection",
          "priority": "CRITICAL",
          "automation": "AUTOMATED",
          "action": "Create 6-day-old approval and trigger timeout handler",
          "expected_results": [
            "Handler detects timed-out approval",
            "Ticket created automatically",
            "Conversation outcome updated to 'Escalated to Ticket'",
            "User notified via Slack"
          ],
          "validation": {
            "lambda_invocation": {
              "payload": "{\"check_approval_timeouts\": true}",
              "response_contains": "Processed.*approval"
            },
            "dynamodb_check": {
              "table": "brie-it-helpdesk-bot-interactions",
              "fields": {
                "outcome": "Escalated to Ticket"
              }
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS013",
      "name": "Data Integrity",
      "description": "Tests for orphaned schedules and actions cleanup",
      "automation_status": "AUTOMATED",
      "test_script": "run-automated-tests.sh",
      "tests": [
        {
          "test_id": "TS013-T001",
          "name": "Verify no orphaned schedules",
          "priority": "MEDIUM",
          "automation": "AUTOMATED",
          "action": "Query EventBridge for test schedules",
          "expected_results": [
            "No orphaned test schedules found",
            "Cleanup working correctly"
          ],
          "validation": {
            "aws_api_check": {
              "service": "scheduler",
              "operation": "list-schedules",
              "filter": "starts_with(Name, 'test-')",
              "expected_count": 0
            }
          }
        },
        {
          "test_id": "TS013-T002",
          "name": "Verify no orphaned pending actions",
          "priority": "MEDIUM",
          "automation": "AUTOMATED",
          "action": "Scan it-actions table for test actions",
          "expected_results": [
            "No orphaned test actions found",
            "Cleanup working correctly"
          ],
          "validation": {
            "dynamodb_scan": {
              "table": "it-actions",
              "filter": "contains(action_id, 'test-')",
              "expected_count": 0
            }
          }
        }
      ]
    },
    {
      "suite_id": "TS014",
      "name": "Production Ticket Validation",
      "description": "Validates bot performance against real production support tickets",
      "tests": [
        {
          "test_id": "TS011-T001",
          "name": "Recent Ticket Analysis",
          "priority": "HIGH",
          "type": "automated",
          "action": "Query last 20 production tickets from DynamoDB",
          "expected_results": [
            "All tickets have valid interaction_type",
            "All tickets have outcome status",
            "Conversation history is complete",
            "Timestamps are valid"
          ],
          "validation": {
            "dynamodb_query": {
              "table": "brie-it-helpdesk-bot-interactions",
              "limit": 20,
              "checks": [
                "interaction_type in ['Access Management', 'Application Support', 'Hardware Support', 'Network & Connectivity', 'Account Management', 'General Support']",
                "outcome in ['Resolved by Brie', 'Self-Service Solution', 'Ticket Created', 'Awaiting Approval', 'In Progress']",
                "conversation_history is not empty",
                "timestamp is valid number"
              ]
            }
          }
        },
        {
          "test_id": "TS011-T002",
          "name": "Categorization Accuracy",
          "priority": "HIGH",
          "type": "automated",
          "action": "Analyze interaction_type distribution in recent tickets",
          "expected_results": [
            "Access Management tickets contain keywords: dl, sso, group, mailbox, access",
            "Application Support tickets contain keywords: excel, rtd, software, app",
            "Hardware Support tickets contain keywords: laptop, computer, hardware, device",
            "Network tickets contain keywords: vpn, network, wifi, internet"
          ],
          "validation": {
            "pattern_matching": true,
            "sample_size": 20
          }
        },
        {
          "test_id": "TS011-T003",
          "name": "Approval Workflow Completion",
          "priority": "CRITICAL",
          "type": "automated",
          "action": "Check for stuck approvals (awaiting_approval=true for >24 hours)",
          "expected_results": [
            "No approvals stuck for more than 24 hours",
            "All approved requests have outcome='Resolved by Brie'",
            "All approved requests have awaiting_approval=false"
          ],
          "validation": {
            "dynamodb_query": {
              "table": "brie-it-helpdesk-bot-interactions",
              "filter": "awaiting_approval = true",
              "time_threshold": 86400
            }
          }
        },
        {
          "test_id": "TS011-T004",
          "name": "Self-Service Success Rate",
          "priority": "MEDIUM",
          "type": "automated",
          "action": "Calculate percentage of Self-Service Solutions vs Ticket Created",
          "expected_results": [
            "Self-Service rate >= 30%",
            "Ticket creation rate <= 50%",
            "Awaiting approval rate <= 30%"
          ],
          "validation": {
            "metrics": {
              "self_service_target": 0.30,
              "ticket_creation_max": 0.50,
              "awaiting_approval_max": 0.30
            }
          }
        },
        {
          "test_id": "TS011-T005",
          "name": "Response Quality Check",
          "priority": "MEDIUM",
          "type": "manual_review",
          "action": "Review 5 random production tickets for response quality",
          "expected_results": [
            "Bot responses are relevant to user questions",
            "Bot provides actionable solutions",
            "Bot tone is professional and helpful",
            "No hallucinated information"
          ],
          "validation": {
            "manual_review": true,
            "sample_size": 5
          }
        }
      ]
    }
  ],
  "execution_notes": {
    "automation_summary": {
      "total_test_suites": 14,
      "automated_suites": 13,
      "manual_suites": 1,
      "total_tests": 29,
      "automated_tests": 26,
      "manual_tests": 3
    },
    "test_scripts": {
      "run-full-automated-tests.sh": "Tests TS001, TS002, TS005, TS007, TS009, TS010 (10 tests)",
      "run-automated-tests.sh": "Tests TS003, TS004, TS006, TS008, TS012, TS013 (8 tests)",
      "test-production-tickets.sh": "Tests TS014 (5 tests)"
    },
    "prerequisites": [
      "AWS credentials configured (AWSCorp profile)",
      "Slack bot token valid",
      "Test user: Matthew Denecke (UDR6PV7DX)",
      "IT approval channel: C09KB40PL9J"
    ],
    "cleanup": [
      "All test scripts include automatic cleanup",
      "Test interactions deleted from DynamoDB",
      "Test actions removed from it-actions table",
      "Cleanup runs even if tests fail (via bash trap)"
    ],
    "known_issues": [
      {
        "issue_id": "#7",
        "description": "Confluence API 403 Forbidden - token expired",
        "impact": "Confluence content retrieval and image upload tests will fail",
        "workaround": "Generate new Confluence API token"
      }
    ]
  }
}
